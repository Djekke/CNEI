<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Core;assembly=Core"
    xmlns:base="clr-namespace:AtomicTorch.GameEngine.Common.Client.MonoGame.UI;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
    xmlns:helpers="clr-namespace:CryoFall.CNEI.UI.Helpers"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:controls="clr-namespace:CryoFall.CNEI.UI.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/UI/Styles/DefaultStyles.xaml" />
        <ResourceDictionary Source="/UI/Styles/SpecialItemsPanel.xaml" />
        <ResourceDictionary Source="/UI/Styles/ItemControlsStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Constants -->
    <system:Single x:Key="SidePanelWidth">180</system:Single>
    <Thickness x:Key="SidePanelMarginLeft">-200,0,0,0</Thickness>

    <system:Double x:Key="EntityItemSize">32</system:Double>

    <!-- Converters -->
    <helpers:MarginLeftConverter x:Key="MarginLeftConverter" />

    <!-- Template Selector -->
    <helpers:InformationTemplateSelector x:Key="InformationTemplateSelector" />

    <!-- Panel Styles -->
    <Style x:Key="BottomPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Margin" Value="0,0,3,2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource BrushColorAlt3}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="10" />
            </Style>
        </Style.Resources>
    </Style>

    <!-- Button Styles -->
    <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Foreground" Value="#CCFFFFFF" />
        <Setter Property="Background" Value="#66666666" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="#66666666" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundMouseOverHighlight}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundPressedHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PseudoButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ToggleButton Styles -->
    <Style x:Key="IconToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="#CCFFFFFF" />
        <Setter Property="Background" Value="#66666666" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="#66666666" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundMouseOverHighlight}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundPressedHighlight}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundPressedHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Style -->
    <Style x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="{StaticResource DefaultScrollbarWidth}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true"
                               IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="{StaticResource DefaultScrollbarWidth}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Track x:Name="PART_Track" Grid.Column="1"
                               IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollViewer Style -->
    <Style x:Key="ProperScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border Grid.Column="0" Grid.ColumnSpan="2"
                                Grid.Row="0" Grid.RowSpan="2"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                        <Border Grid.Column="0" Grid.Row="1"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}">
                            <ScrollContentPresenter Content="{TemplateBinding Content}"
                                                    Margin="{TemplateBinding Padding}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>

                        <Border Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding BorderThickness}"
                                BorderBrush="{x:Null}">
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Margin="1,1,1,1"
                                       Style="{StaticResource HorizontalScrollBar}"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Orientation="Horizontal"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                        </Border>
                        <Border Grid.Column="1" Grid.Row="1" Margin="{TemplateBinding BorderThickness}"
                                BorderBrush="{x:Null}">
                            <ScrollBar x:Name="PART_VerticalScrollBar" Margin="1,1,1,1"
                                       Style="{StaticResource VerticalScrollBar}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Orientation="Vertical"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       ViewportSize="{TemplateBinding ViewportHeight}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- GroupBox Style -->
    <Style x:Key="DefaultGroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource BrushColorAlt5}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="0,1,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4"/>
                            <ColumnDefinition Width="26"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="4"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="4"/>
                        </Grid.RowDefinitions>
                        <!-- Outer line -->
                        <Border CornerRadius="1"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="5"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                        </Border>
                        <!-- ContentPresenter for the header -->
                        <Border x:Name="Header"
                                Padding="6,0,6,0"
                                Background="Black"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="2"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </Border>
                        <!-- Primary content for GroupBox -->
                        <ContentPresenter Grid.Row="2"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="3"
                                          Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListBox Styles -->
    <Style x:Key="DefaultListBoxItems"  TargetType="{x:Type ListBoxItem}">
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundListElementClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundListElementEnter}" />
        <Setter Property="Background" Value="{StaticResource ItemBackgroundNormalDiagonalBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BrushColor7}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <controls:EntitySlotControl />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{StaticResource ItemBackgroundNormalHoverBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultListBox" TargetType="{x:Type ListBox}">
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="HorizontalAlignment"  Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultListBoxItems}" />
    </Style>


    <Style x:Key="ListBoxColumnItems"  TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BrushColor7}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0,1,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxColumn" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="HorizontalAlignment"  Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                  Margin="1">
                        <ItemsPresenter Margin="0,0,2,0" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VirtualizationMode="Recycling"
                                            IsVirtualizing="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxColumnItems}" />
    </Style>


    <Style x:Key="ListBoxRowItems" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <controls:EntitySlotControl IsBackgroundEnabled="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxRow" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="HorizontalAlignment"  Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxRowItems}" />
    </Style>


    <Style x:Key="ListBoxInformationItems" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentControl Content="{Binding}"
                                    ContentTemplateSelector="{StaticResource InformationTemplateSelector}"
                                    x:Name="InformationContent">
                        <ContentControl.Resources>
                            <DataTemplate x:Key="EntityTemplate">
                                <controls:EntitySlotControl />
                            </DataTemplate>
                            <DataTemplate x:Key="StringTemplate">
                                <TextBlock Text="{Binding StringFormat={}{0}: }"
                                           VerticalAlignment="Center" />
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxInformation" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="HorizontalAlignment"  Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxInformationItems}" />
    </Style>


    <Style x:Key="ListBoxSimpleWrapperItems"  TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxSimpleWrapper" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="HorizontalAlignment"  Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxSimpleWrapperItems}" />
    </Style>


    <Style x:Key="IngredientListBoxItems"  TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Margin="1,2,1,2"
                            CornerRadius="2"
                            BorderThickness="0"
                            Background="{StaticResource BrushColorAlt3}">
                        <ContentPresenter VerticalAlignment="Center" Content="{Binding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IngredientListBox" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="HorizontalAlignment"  Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                  CanContentScroll="False"
                                  Margin="1,0,1,0">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource IngredientListBoxItems}" />
    </Style>

    <!-- TabControl Styles -->
    <Style x:Key="TabControlCompactStyleDockMode"
           BasedOn="{StaticResource TabControlCompactStyle}"
           TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <DockPanel IsItemsHost="True"
                                   LastChildFill="False"
                                   Margin="2,2,2,0" />
                        <ContentPresenter Grid.Row="1"
                                          ContentSource="SelectedContent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}"
                   BasedOn="{StaticResource TabItemCompactStyle}" />
        </Style.Resources>
    </Style>

    <Style x:Key="TabItemStretched"
           TargetType="{x:Type TabItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderThickness="0,0,0,2"
                            CornerRadius="1,1,0,0">
                        <Grid x:Name="HeaderGroup">
                            <ContentPresenter x:Name="HeaderPresenter" Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Header" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF557799" Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{StaticResource BrushColor6}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF557799" Opacity="0.45" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{StaticResource BrushColorAlt6}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{StaticResource BrushColor7}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlStretchedHeader"
           BasedOn="{StaticResource TabControlCompactStyle}"
           TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <UniformGrid x:Name="HeaderPanel"
                                     IsItemsHost="True"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     Rows="1" />

                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          Grid.Row="1"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          ContentSource="SelectedContent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}"
                   BasedOn="{StaticResource TabItemStretched}" />
        </Style.Resources>
    </Style>

    <!-- Side Panel template -->
    <ControlTemplate x:Key="SidePanelTemplate">
        <Grid x:Name="LayoutRoot"
              Margin="{StaticResource SidePanelMarginLeft}"
              Width="{StaticResource SidePanelWidth}"
              Background="{StaticResource WindowBackground}">
            <Border Style="{StaticResource WidgetBackgroundBorder}" />

            <Border BorderThickness="1,1,0,1"
                    CornerRadius="3,0,0,3">
                <Grid Margin="10">
                    <ContentPresenter />
                </Grid>
            </Border>

            <Grid x:Name="WidgetBackground"
                  IsHitTestVisible="False">
                <!--<Border CornerRadius="3" Background="{StaticResource WidgetBackgroundImageTexture}" />-->
                <Border VerticalAlignment="Top" Height="10" CornerRadius="3"
                        Background="{StaticResource WidgetBackgroundGradientHorizontal}" />
                <Border VerticalAlignment="Bottom" Height="10" CornerRadius="3"
                        Background="{StaticResource WidgetBackgroundGradientHorizontal}"
                        RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <ScaleTransform ScaleY="-1" />
                    </Border.RenderTransform>
                </Border>
                <Border HorizontalAlignment="Left" Width="10" CornerRadius="3"
                        Background="{StaticResource WidgetBackgroundGradientVertical}" />
                <Border Style="{StaticResource WidgetBorderStyle}"
                        BorderThickness="1,1,0,1" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!-- Default entity slot control style -->
    <Style TargetType="{x:Type controls:EntitySlotControl}">
        <Setter Property="Background" Value="{StaticResource ItemSlotControlBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource ItemSlotControlBorderBrush}" />
        <Setter Property="Width" Value="{StaticResource EntityItemSize}" />
        <Setter Property="Height" Value="{StaticResource EntityItemSize}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:EntitySlotControl}">
                    <Border x:Name="Border"
                            CornerRadius="2"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="MouseStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="RectangleMouseOver">
                                            <EasingColorKeyFrame Value="#10FFFFFF" KeyTime="0" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="LayoutRoot"
                              Background="Transparent">
                            <base:ToolTipServiceExtend.ToolTip>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="{Binding Title}" FontWeight="Bold" />
                                    <TextBlock Text="{Binding Type}" FontWeight="Bold"
                                               Visibility="{Binding TypeVisibility}" />
                                </StackPanel>
                            </base:ToolTipServiceExtend.ToolTip>
                            <Rectangle x:Name="BackgroundTexture" Fill="{StaticResource WidgetBackgroundImageTexture}" />
                            <Grid x:Name="IconHolder"
                                  Visibility="{Binding Visibility, FallbackValue=Collapsed}">
                                <Rectangle x:Name="Icon"
                                           Fill="{Binding Icon}"
                                           UseLayoutRounding="True"
                                           Margin="{TemplateBinding Padding}" />
                                <TextBlock Text="{Binding Count}"
                                           Visibility="{Binding CountVisibility}"
                                           Style="{StaticResource ItemCountTextBlockStyle}" />
                            </Grid>
                            <Rectangle x:Name="RectangleMouseOver" Fill="#00FFFFFF" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBackgroundEnabled" Value="False">
                            <Setter TargetName="BackgroundTexture" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background" Value="#FF262626" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>